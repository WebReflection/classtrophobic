"use strict";

module.exports = function (_ref) {
  var t = _ref.types;

  return {
    name: "transform-regexp-constructors",
    visitor: {
      NewExpression: function NewExpression(path) {
        if (!t.isIdentifier(path.node.callee, { name: "RegExp" })) {
          return;
        }
        var evaluatedArgs = path.get("arguments").map(function (a) {
          return a.evaluate();
        });
        if (!evaluatedArgs.every(function (a) {
          return a.confident === true && typeof a.value === "string";
        })) {
          return;
        }
        var pattern = evaluatedArgs.length >= 1 && evaluatedArgs[0].value !== "" ? evaluatedArgs[0].value : "(?:)";
        var flags = evaluatedArgs.length >= 2 ? evaluatedArgs[1].value : "";
        path.replaceWith(t.regExpLiteral(pattern, flags));
      }
    }
  };
};